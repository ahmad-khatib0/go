---
app:
  permanent_accounts: false # If account deletion is disabled.
  version: '0.0.1'
  default_country_code: ''
  #  Reported to clients in response to {hi} message.
  #  For instance, to define the buildstamp as a timestamp of when the server was built add a
  #  flag to compiler command line:
  # 	-ldflags "-X main.buildstamp=`date -u '+%Y%m%dT%H:%M:%SZ'`"
  #  or to set it to git tag:
  # 	-ldflags "-X main.buildstamp=`git describe --tags`"
  buildstamp_command: -ldflags "-X main.buildstamp=`git describe --tags`"
  # Masked tags: tags immutable on User (mask), mutable on Topic only within the mask.
  masked_tags_ns: []

secrets:
  api_key_salt: 'T713/rYYgW7g4m3vG6zGRh7+FM1t0T8j13koXScOAj4='

http:
  cache_control: 39600 # 11 hours
  use_x_forwarded_for: true

paths:
  listen: :6060
  api: /
  static_mount: /
  expvar: /debug/vars
  server_status: /debug/status
  pprof: '/pprof'

pprof:
  file_name: profile

grpc_config:
  listen: ':16060'
  keepalive: true

ws_config:
  ws_compression_enabled: false
  # Maximum message size allowed from the clients in bytes (262144 = 256KB). Media files with sizes greater
  # than this limit are sent out of band. Don't change this limit to a much higher value because it would
  # likely cause crashes: on Android & iOS due to a limit on the SQLite cursor window size;
  # on the server-side with MySQL adapter due to the limit on the sort buffer size.
  max_message_size: 262144
  max_subscriber_count: 128 # Maximum number of subscribers per group topic
  max_tag_count: 15 # Maximum number of indexable tags per topic or user.

media:
  handler_name: fs
  # Maximum size of uploaded file (8MB here for testing, maybe increase to 100MB = 104857600 in prod)
  max_file_upload_size: 8388608
  # Garbage collection periodicity in seconds: unused or abandoned uploads are deleted.
  gc_period: 60
  # The number of unused/abandoned entries to delete in one pass.
  gc_block_size: 100
  fs:
    # File system location to store uploaded files. In case of a cluster it
    # must be accessible by all cluster members, i.e. a network drive like https://www.samba.org/
    file_upload_directory: uploads
    server_url: /v0/file/s/
    # Cache-Control header to use for uploaded files. 86400 seconds = 24 hours.
    cache_control: max-age=86400
    # Origin URLs allowed to download/upload files, e.g. ["https://www.example.com", "http://example.com"].
    cors_origins: ['*']

tls:
  enabled: false
  # Listen for connections on this port and redirect them to HTTPS port. Cannot be a Unix socket.
  http_redirect: :80
  # Add Strict-Transport-Security to headers, the value signifies age. Zero or negative value turns it off.
  strict_max_age: 604800
  cert_file: /etc/httpd/conf/your.domain.crt # Ignored if "autocert" is defined.
  cert_key: /etc/httpd/conf/your.domain.key # Ignored if "autocert" is defined.
  autocert:
    # Location of certificates.
    cache: '/etc/letsencrypt/live/your.domain.here'
    email: noreply@example.com
    domains: ['whatever.example.com']

auth:
  # Optional mapping of externally-visible authenticator names to internal names.
  # For example use ["my-auth:basic", "basic:"] to rename "basic" authenticator to
  # "my-auth" and make "basic" unaccessible by the old name. If you want to use REST-auth, then
  # the config is ["basic:rest", "rest:"]. Default is identity mapping.
  logical_names: []
  basic:
    # Add 'auth-name:username' to tags making user discoverable by username.
    add_to_tags: true
    # // The minimum length of a login in unicode runes, i.e. "登录" is length 2, not 6.
    # // The maximum length is 32 and it cannot be changed.
    min_login_length: 4
    # The minimum length of a password in unicode runes, "пароль" is length 6, not 12.
    # There is no limit on maximum length.
    min_password_length: 6
  token:
    # // Lifetime of a security token in seconds. 1209600 = 2 weeks.
    expire_in: 1209600
    # Serial number of the token. Can be used to invalidate all issued tokens at once.
    serial_number: 1
    key: wfaY2RgF2S1OQI/ZlK+LSrp1KB2jwAdGAIHQ7JZn+Kc=
  code:
    expire_in: 900
    max_retries: 3
    code_length: 6

store:
  # XTEA encryption key for user IDs and topic names. 16 random bytes base64-encoded.
  uid_key: la6YsO+bNX/+XIkOqc5Svw==
  max_results: 1024
  adapter_name: postgres
  postgres:
    user: postgres
    password: postgres
    host: localhost
    port: 5432
    db_name: chat
    max_open_conn: 50
    max_idle_conn: 50
    max_results: 1024
    max_message_results: 100
    # Maximum amount of time a connection may be reused. Zero means unlimited.
    max_lifetime_conn: 60
    sql_timeout: 10

validator: # Account validators (email or SMS or captcha).
  email:
    # Restrict use of "email" namespace: make users searchable by their emails,
    # disable manual creation of email: tags.
    add_to_tags: true
    # List of authentication levels which require this validation method.
    # Remove this line to disable email validation
    required: ['auth']
    host_url: http://localhost:6060/
    smtp_server: smtp.example.com
    smtp_port: '25'
    sender: 'chat app <noreply@example.com>'
    login: 'john.doe@example.com'
    password: 'password'
    # Authentication mechanism to use, optional. One of "login", "cram-md5", "plain" (default)
    auth_mechanism: login
    # FQDN to use in SMTP HELO/EHLO command; if missing, the hostname from "host_url" is used
    smtp_helo_host: example.com
    # Skip verification of the server's certificate chain and host name.
    # In this mode, TLS is susceptible to machine-in-the-middle attacks.
    insecure_skip_verify: false
    # Allow this many confirmation attempts before blocking the credential.
    max_retries: 3
    domains: []
    debug_response: 123456
    validation_templ_file: './templ/email-validation-{{.Language}}.templ'
    reset_templ_file: './templ/email-password-reset-{{.Language}}.templ'
    languages: ['en']
    code_length: 6

# Configuration for stale account garbage collector.
account_gc:
  enabled: true
  gc_period: 3600
  gc_block_size: 10
  gc_min_account_age: 30

webrtc:
  enabled: true
  call_establishment_timeout: 30
  ice_servers_file: 'filename.json'
  ice_servers:
    username: username
    credential: 'password'
    urls:
      - turn:turn.example.com:80?transport=udp
      - turn:turn.example.com:3478?transport=udp
      - turn:turn.example.com:80?transport=tcp
      - turn:turn.example.com:3478?transport=tcp
      - turns:turn.example.com:443?transport=tcp
      - turns:turn.example.com:5349?transport=tcp
    config:
      enabled: true
      endpoint_url: ws://localhost:7880/
      api_key: devkey
      api_secret: secret
      # Maximum call duration in seconds (1800 seconds = 30 min)
      max_duration: 1800

cluster:
  main_name: 'chat' # Name of this cluster node
  nodes: # List of available nodes
    # Name and TCP address of every node in the cluster. The ports 12001..12003
    # are cluster communication ports. They don't need to be exposed to end-users.
    - name: one
      addr: 'localhost:12001'
    - name: two
      addr: 'localhost:12002'
    - name: three
      addr: 'localhost:12003'
  cluster_fail_over:
    enabled: true
    heartbeat: 100 # Time in milliseconds between heartbeats
    # Initiate leader election when the leader is not available for this many heartbeats.
    vote_after: 8
    # Consider node failed when it missed this many heartbeats.
    node_failures: 16

plugins:
  - enabled: true
    name: python_chat_bot # Name of the plugin, must be unique.
    timeout: 20000 # Timeout in microseconds
    filters:
      account: 'C' # Account creation events
    # Error code to use in case plugin has failed; 0 means to ignore the failures.
    failure_code: 0
    # Text of an error message to report in case of plugin failure.
    failure_text: ''
    service_addr: tcp://localhost:40051 # Address of the plugin
